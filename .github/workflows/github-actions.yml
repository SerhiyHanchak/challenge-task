name: project ci/cd process

on:
  push:
    branches: [ "master", "feature/*" ]
  pull_request:
    branches: [ "master" ]

jobs:
  dependency_check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v3
    - name: Check outdated dependencies
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - run: npm ci
    - run: npm outdated || true

  test:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      env:
       DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test

  docker_build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install Dependencies
      run: npm install

    - name: Build Docker Image
      run: docker build -t serhiyhanchak/task-challenge:latest .

  publish:
    runs-on: ubuntu-latest
    needs: docker_build

    steps:
    - name: Login to Docker Hub
      run: echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_TOKEN }} --password-stdin

    - name: Push Docker Image
      run: docker push serhiyhanchak/task-challenge:latest
